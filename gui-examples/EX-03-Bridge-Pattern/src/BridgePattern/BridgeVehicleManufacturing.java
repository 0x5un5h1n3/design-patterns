package BridgePattern;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


public class BridgeVehicleManufacturing extends javax.swing.JFrame {

    /**
     * Creates new form BridgeVehicleManufacturing
     */
    public BridgeVehicleManufacturing() {
        initComponents();
    }

    private static BridgeVehicleManufacturing instance;

    public static BridgeVehicleManufacturing getInstance() {
        if (instance == null) {
            instance = new BridgeVehicleManufacturing();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnManufacture = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblVehicle = new javax.swing.JLabel();
        checkProduce = new javax.swing.JCheckBox();
        checkAssemble = new javax.swing.JCheckBox();
        checkPaint = new javax.swing.JCheckBox();
        checkQualityCheck = new javax.swing.JCheckBox();
        btnClear = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        txtBrand = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        txtKmLiter = new javax.swing.JTextField();
        comboType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblProduce = new javax.swing.JLabel();
        lblAssemble = new javax.swing.JLabel();
        lblPaint = new javax.swing.JLabel();
        lblQualityCheck = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NDH PVT LTD (Bridge Pattern)");
        setLocation(new java.awt.Point(0, 0));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("NDH PVT LTD");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(80, 80, 80));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        btnManufacture.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnManufacture.setText("Manufature");
        btnManufacture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManufactureActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Workshop");

        lblImage.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblImage.setForeground(new java.awt.Color(255, 255, 255));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("[image]");
        lblImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        lblVehicle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblVehicle.setForeground(new java.awt.Color(255, 255, 255));
        lblVehicle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        checkProduce.setBackground(new java.awt.Color(51, 51, 51));
        checkProduce.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkProduce.setForeground(new java.awt.Color(255, 255, 255));
        checkProduce.setText("Production");
        checkProduce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkProduceActionPerformed(evt);
            }
        });

        checkAssemble.setBackground(new java.awt.Color(51, 51, 51));
        checkAssemble.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkAssemble.setForeground(new java.awt.Color(255, 255, 255));
        checkAssemble.setText("Assembly");
        checkAssemble.setToolTipText("");
        checkAssemble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAssembleActionPerformed(evt);
            }
        });

        checkPaint.setBackground(new java.awt.Color(51, 51, 51));
        checkPaint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkPaint.setForeground(new java.awt.Color(255, 255, 255));
        checkPaint.setText("Painting");
        checkPaint.setToolTipText("");
        checkPaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPaintActionPerformed(evt);
            }
        });

        checkQualityCheck.setBackground(new java.awt.Color(51, 51, 51));
        checkQualityCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkQualityCheck.setForeground(new java.awt.Color(255, 255, 255));
        checkQualityCheck.setText("Qualiy Checking");
        checkQualityCheck.setToolTipText("");
        checkQualityCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkQualityCheckActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnManufacture, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(lblVehicle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkAssemble)
                            .addComponent(checkProduce)
                            .addComponent(checkPaint)
                            .addComponent(checkQualityCheck)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(checkProduce)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkAssemble)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkPaint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkQualityCheck)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnManufacture)
                    .addComponent(btnClear))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jCheckBox4.setBackground(new java.awt.Color(51, 51, 51));
        jCheckBox4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox4.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setText("Color");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(51, 51, 51));
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Type");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(51, 51, 51));
        jCheckBox2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Brand");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox5.setBackground(new java.awt.Color(51, 51, 51));
        jCheckBox5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox5.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox5.setText("Km/Liter");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(51, 51, 51));
        jCheckBox3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Model");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        txtBrand.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBrand.setEnabled(false);

        txtModel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtModel.setEnabled(false);

        txtColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtColor.setEnabled(false);

        txtKmLiter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtKmLiter.setEnabled(false);
        txtKmLiter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKmLiterKeyTyped(evt);
            }
        });

        comboType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bus", "Car", "Bike", "Other" }));
        comboType.setEnabled(false);
        comboType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTypeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Vehicle");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBrand)
                            .addComponent(txtModel)
                            .addComponent(txtColor)
                            .addComponent(txtKmLiter)
                            .addComponent(comboType, 0, 200, Short.MAX_VALUE))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(txtKmLiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        lblProduce.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblProduce.setForeground(new java.awt.Color(255, 255, 255));
        lblProduce.setText("Production : N/A");

        lblAssemble.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAssemble.setForeground(new java.awt.Color(255, 255, 255));
        lblAssemble.setText("Assembly : N/A");

        lblPaint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPaint.setForeground(new java.awt.Color(255, 255, 255));
        lblPaint.setText("Painting : N/A");

        lblQualityCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQualityCheck.setForeground(new java.awt.Color(255, 255, 255));
        lblQualityCheck.setText("Quality Checking : N/A");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Process");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblProduce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAssemble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPaint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblQualityCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProduce, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAssemble, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPaint, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQualityCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(798, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    abstract class Vehicle {

        protected String vehicleType = comboType.getSelectedItem().toString();
        protected String vehicleBrand = txtBrand.getText();
        protected String vehicleModel = txtModel.getText();
        protected String vehicleColor = txtColor.getText();
        protected String vehicleKmLiter = txtKmLiter.getText();

        public abstract void manufacture();

        public abstract void produce();

        public abstract void assemble();

        public abstract void paint();

        public abstract void qualityCheck();

    }

    class Bus extends Vehicle {

        @Override
        public void manufacture() {
            System.out.println("Manufacturing Bus...");
        }

        @Override
        public void produce() {
            if (checkProduce.isSelected()) {
                lblProduce.setText("Bus Production : Done");

            } else {
                lblProduce.setText("Bus Production : N/A");
            }
        }

        @Override
        public void assemble() {
            if (checkAssemble.isSelected()) {
                lblAssemble.setText("Bus Assembly : Done");
            } else {
                lblAssemble.setText("Bus Assembly : N/A");
            }
        }

        @Override
        public void paint() {
            if (checkPaint.isSelected()) {
                lblPaint.setText("Bus Painting : Done");
            } else {
                lblPaint.setText("Bus Painting : N/A");
            }
        }

        @Override
        public void qualityCheck() {
            if (checkQualityCheck.isSelected()) {
                lblQualityCheck.setText("Bus Quality Checking : Done");
            } else {
                lblQualityCheck.setText("Bus Quality Checking : N/A");
            }
        }

    }

    class Car extends Vehicle {

        @Override
        public void manufacture() {
            JOptionPane.showMessageDialog(getParent(), "Manufacturing Car...");
        }

        @Override
        public void produce() {
            if (checkProduce.isSelected()) {
                lblProduce.setText("Car Production : Done");
            } else {
                lblProduce.setText("Car Production : N/A");
            }
        }

        @Override
        public void assemble() {
            if (checkAssemble.isSelected()) {
                lblAssemble.setText("Car Assembly : Done");
            } else {
                lblAssemble.setText("Car Assembly : N/A");
            }
        }

        @Override
        public void paint() {
            if (checkPaint.isSelected()) {
                lblPaint.setText("Car Painting : Done");
            } else {
                lblPaint.setText("Car Painting : N/A");
            }
        }

        @Override
        public void qualityCheck() {
            if (checkQualityCheck.isSelected()) {
                lblQualityCheck.setText("Car Quality Checking : Done");
            } else {
                lblQualityCheck.setText("Car Quality Checking : N/A");
            }
        }

    }

    class Bike extends Vehicle {

        @Override
        public void manufacture() {
            System.out.println("Manufacturing Bike...");
        }

        @Override
        public void produce() {
            if (checkProduce.isSelected()) {
                lblProduce.setText("Bike Production : Done");
            } else {
                lblProduce.setText("Bike Production : N/A");
            }
        }

        @Override
        public void assemble() {
            if (checkAssemble.isSelected()) {
                lblAssemble.setText("Bike Assembly : Done");
            } else {
                lblAssemble.setText("Bike Assembly : N/A");
            }
        }

        @Override
        public void paint() {
            if (checkPaint.isSelected()) {
                lblPaint.setText("Bike Painting : Done");
            } else {
                lblPaint.setText("Bike Painting : N/A");
            }
        }

        @Override
        public void qualityCheck() {
            if (checkQualityCheck.isSelected()) {
                lblQualityCheck.setText("Bike Quality Checkinging : Done");
            } else {
                lblQualityCheck.setText("Bike Quality Checking : N/A");
            }
        }

    }

    class Other extends Vehicle {

        @Override
        public void manufacture() {
            System.out.println("Manufacturing Vehicle...");
        }

        @Override
        public void produce() {
            if (checkProduce.isSelected()) {
//                JOptionPane.showMessageDialog(getParent(), "Producing Vehicle...");
                lblProduce.setText("Vehicle Production : Done");
            } else {
                lblProduce.setText("Vehicle Production : N/A");
            }
        }

        @Override
        public void assemble() {
            if (checkAssemble.isSelected()) {
                lblAssemble.setText("Vehicle Assembly : Done");
            } else {
                lblAssemble.setText("Vehicle Assembly : N/A");
            }
        }

        @Override
        public void paint() {
            if (checkPaint.isSelected()) {
                lblPaint.setText("Vehicle Painting : Done");
            } else {
                lblPaint.setText("Vehicle Painting : N/A");
            }
        }

        @Override
        public void qualityCheck() {
            if (checkQualityCheck.isSelected()) {
                lblQualityCheck.setText("Vehicle Quality Checking : Done");
            } else {
                lblQualityCheck.setText("Vehicle Quality Checking : N/A");
            }
        }

    }
    private void btnManufactureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManufactureActionPerformed


        if (!checkProduce.isSelected() && !checkAssemble.isSelected() && 
                !checkPaint.isSelected() && !checkQualityCheck.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please Select 1 or More Workshops ");
        } else {
            JOptionPane.showMessageDialog(this, "Manufacturing Done!");

            Results results = Results.getInstance();
            results.setVisible(true);

            if (comboType.isEnabled() == false) {
                Results.lblVehicleType.setText("Vehicle Type : N/A");
            } else {
                Results.lblVehicleType.setText("Vehicle Type : " + comboType.getSelectedItem().toString());
            }

            if (txtBrand.isEnabled() == false) {
                Results.lblVehicleBrand.setText("Vehicle Brand : N/A");
            } else {
                Results.lblVehicleBrand.setText("Vehicle Brand : " + txtBrand.getText());
            }

            if (txtModel.isEnabled() == false) {
                Results.lblVehicleModel.setText("Vehicle Model : N/A");
            } else {
                Results.lblVehicleModel.setText("Vehicle Model : " + txtModel.getText());
            }
            if (txtColor.isEnabled() == false) {
                Results.lblVehicleColor.setText("Vehicle Color : N/A");
            } else {
                Results.lblVehicleColor.setText("Vehicle Color : " + txtColor.getText());
            }

            if (txtKmLiter.isEnabled() == false) {
                Results.lblVehicleKmLiter.setText("Vehicle Km/Liter : N/A");
            } else {
                Results.lblVehicleKmLiter.setText("Vehicle Km/Liter : " + txtKmLiter.getText());
            }

            Results.lblProduce.setText(lblProduce.getText());
            Results.lblAssemble.setText(lblAssemble.getText());
            Results.lblPaint.setText(lblPaint.getText());
            Results.lblQualityCheck.setText(lblQualityCheck.getText());
        }


    }//GEN-LAST:event_btnManufactureActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if (jCheckBox4.isSelected()) {
            txtColor.setEnabled(true);

        } else {
            txtColor.setEnabled(false);
            txtColor.setText(null);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            comboType.setEnabled(true);

        } else {
            comboType.setEnabled(false);
            comboType.setSelectedItem("Vehicle");
            lblImage.setText("Vehicle");
            lblImage.setIcon(null);
            lblVehicle.setText(null);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            txtBrand.setEnabled(true);

        } else {
            txtBrand.setEnabled(false);
            txtBrand.setText(null);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        if (jCheckBox5.isSelected()) {
            txtKmLiter.setEnabled(true);
        } else {
            txtKmLiter.setEnabled(false);
            txtKmLiter.setText(null);
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            txtModel.setEnabled(true);

        } else {
            txtModel.setEnabled(false);
            txtModel.setText(null);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void comboTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTypeActionPerformed
        if (comboType.getSelectedItem() == "Bus") {
            Icon icon1 = new ImageIcon(getClass().getResource("/img/bus.png"));
            lblImage.setIcon(icon1);
            lblVehicle.setText("Bus");
            lblImage.setText(null);

            lblProduce.setText("Bus Production : N/A");
            lblAssemble.setText("Bus Assembly : N/A");
            lblPaint.setText("Bus Painting : N/A");
            lblQualityCheck.setText("Bus Quality Checking : N/A");

            checkProduce.setSelected(false);
            checkAssemble.setSelected(false);
            checkPaint.setSelected(false);
            checkQualityCheck.setSelected(false);

        } else if (comboType.getSelectedItem() == "Car") {
            Icon icon2 = new ImageIcon(getClass().getResource("/img/car.png"));
            lblImage.setIcon(icon2);
            lblVehicle.setText("Car");
            lblImage.setText(null);

            lblProduce.setText("Car Production : N/A");
            lblAssemble.setText("Car Assembly : N/A");
            lblPaint.setText("Car Painting : N/A");
            lblQualityCheck.setText("Car Quality Checking : N/A");

        } else if (comboType.getSelectedItem() == "Bike") {
            Icon icon3 = new ImageIcon(getClass().getResource("/img/bike.png"));
            lblImage.setIcon(icon3);
            lblVehicle.setText("Bike");
            lblImage.setText(null);

            lblProduce.setText("Bike Production : N/A");
            lblAssemble.setText("Bike Assembly : N/A");
            lblPaint.setText("Bike Painting : N/A");
            lblQualityCheck.setText("Bike Quality Checking : N/A");

            checkProduce.setSelected(false);
            checkAssemble.setSelected(false);
            checkPaint.setSelected(false);
            checkQualityCheck.setSelected(false);

        } else {
            Icon icon4 = new ImageIcon(getClass().getResource("/img/other.png"));
            lblImage.setIcon(icon4);
            lblVehicle.setText("Other");
            lblImage.setText(null);

            lblProduce.setText("Vehicle Production : N/A");
            lblAssemble.setText("Vehicle Assembly : N/A");
            lblPaint.setText("Vehicle Painting : N/A");
            lblQualityCheck.setText("Vehicle Quality Checking : N/A");

            checkProduce.setSelected(false);
            checkAssemble.setSelected(false);
            checkPaint.setSelected(false);
            checkQualityCheck.setSelected(false);
        }
    }//GEN-LAST:event_comboTypeActionPerformed

    private void checkProduceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkProduceActionPerformed

        if (comboType.getSelectedItem() == "Bus") {
            Vehicle bus = new Bus();
            bus.produce();
        } else if (comboType.getSelectedItem() == "Car") {
            Vehicle car = new Car();
            car.produce();
        } else if (comboType.getSelectedItem() == "Bike") {
            Vehicle bike = new Bike();
            bike.produce();
        } else {
            Vehicle other = new Other();
            other.produce();
        }
    }//GEN-LAST:event_checkProduceActionPerformed

    private void checkAssembleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAssembleActionPerformed
        if (comboType.getSelectedItem() == "Bus") {
            Vehicle bus = new Bus();
            bus.assemble();
        } else if (comboType.getSelectedItem() == "Car") {
            Vehicle car = new Car();
            car.assemble();
        } else if (comboType.getSelectedItem() == "Bike") {
            Vehicle bike = new Bike();
            bike.assemble();
        } else {
            Vehicle other = new Other();
            other.assemble();
        }
    }//GEN-LAST:event_checkAssembleActionPerformed

    private void checkPaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPaintActionPerformed
        if (comboType.getSelectedItem() == "Bus") {
            Vehicle bus = new Bus();
            bus.paint();
        } else if (comboType.getSelectedItem() == "Car") {
            Vehicle car = new Car();
            car.paint();
        } else if (comboType.getSelectedItem() == "Bike") {
            Vehicle bike = new Bike();
            bike.paint();
        } else {
            Vehicle other = new Other();
            other.paint();
        }
    }//GEN-LAST:event_checkPaintActionPerformed

    private void checkQualityCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkQualityCheckActionPerformed
        if (comboType.getSelectedItem() == "Bus") {
            Vehicle bus = new Bus();
            bus.qualityCheck();
        } else if (comboType.getSelectedItem() == "Car") {
            Vehicle car = new Car();
            car.qualityCheck();
        } else if (comboType.getSelectedItem() == "Bike") {
            Vehicle bike = new Bike();
            bike.qualityCheck();
        } else {
            Vehicle other = new Other();
            other.qualityCheck();
        }
    }//GEN-LAST:event_checkQualityCheckActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        comboType.setSelectedIndex(0);
        txtBrand.setText(null);
        txtColor.setText(null);
        txtKmLiter.setText(null);
        txtModel.setText(null);

        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);

        checkProduce.setSelected(false);
        checkAssemble.setSelected(false);
        checkPaint.setSelected(false);
        checkQualityCheck.setSelected(false);

        lblProduce.setText("Produce : N/A");
        lblAssemble.setText("Assemble : N/A");
        lblPaint.setText("Paint : N/A");
        lblQualityCheck.setText("Quality Check : N/A");

        JOptionPane.showMessageDialog(this, "All fields Cleared!");
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtKmLiterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKmLiterKeyTyped
        char c = evt.getKeyChar();
        if(! Character.isDigit(c)){
            if(c != '.'){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtKmLiterKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BridgeVehicleManufacturing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BridgeVehicleManufacturing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BridgeVehicleManufacturing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BridgeVehicleManufacturing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BridgeVehicleManufacturing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnManufacture;
    private javax.swing.JCheckBox checkAssemble;
    private javax.swing.JCheckBox checkPaint;
    private javax.swing.JCheckBox checkProduce;
    private javax.swing.JCheckBox checkQualityCheck;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel lblAssemble;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblPaint;
    private javax.swing.JLabel lblProduce;
    private javax.swing.JLabel lblQualityCheck;
    private javax.swing.JLabel lblVehicle;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtKmLiter;
    private javax.swing.JTextField txtModel;
    // End of variables declaration//GEN-END:variables
}
